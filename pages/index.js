import Head from "next/head";

import styles from "../styles/Home.module.css";

import { useState, useEffect } from "react";
import { db } from "../lib/firebase";
import {
    collection,
    getDocs,
    addDoc,
    updateDoc,
    doc,
    deleteDoc
} from "firebase/firestore";

export default function Home() {
    const [users, setUsers] = useState([]);

    const [newName, setNewName] = useState("");
    const [newAge, setNewAge] = useState("");

    const usersCollectionRef = collection(db, "Users");

    // ECRITURE NEW ELEMENT  DATABASE

    const createUser = async () => {
        await addDoc(usersCollectionRef, {
            name: newName,
            age: Number(newAge),
        });
        setNewAge(0);
        setNewName("");
    };

    // LECTURE DATABASE

    useEffect(() => {
        const getUsers = async (e) => {
            const data = await getDocs(usersCollectionRef);

            // mappe à travers la data pour rendre les informations plus lisibles ...
            setUsers(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));
        };
        getUsers();
    }, [users]);

    // UPDATE AGE USER

    const updateUserAge = async (id, age) => {
        // userDoc définit quel User est sélectionné (db, collection, id )
        const userDoc = doc(db, "Users", id);
        const newAge = { age: age + 1 };

        await updateDoc(userDoc, newAge);
    };

    // DELETE USER

    const deleteUser = async (id) => {
      
      const userDoc = doc(db, "Users", id);
      await deleteDoc(userDoc)
    }

    return (
        <div>
            <Head>
                <title>Tuto Firebase Database</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                {/* LISTE DES USERS */}

                <ul>
                    {users.map((user, index) => (
                        <>
                            <li key={index}>
                                Name : {user.name}
                                <br />
                                Age : {user.age}
                                <button
                                    onClick={() =>
                                        updateUserAge(user.id, user.age)
                                    }
                                >
                                    age +1
                                </button>
                                <button onClick={() => {deleteUser(user.id)}}>Delete</button>
                            </li>
                        </>
                    ))}
                </ul>

                {/* FORM POUR NOUVEAUX USERS */}
                <div>
                    <input
                        onChange={(e) => {
                            setNewName(e.target.value);
                        }}
                        type="text"
                        placeholder="Name..."
                        value={newName}
                    />

                    <input
                        onChange={(e) => {
                            setNewAge(e.target.value);
                        }}
                        type="number"
                        placeholder="Age..."
                        value={newAge}
                    />

                    <button onClick={createUser}>Add</button>
                </div>
            </main>
        </div>
    );
}
